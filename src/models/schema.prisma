// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  idCliente  Int   @id @default(autoincrement())
  nome       String
  email      String   @unique
  cpf        String   @unique
  telefone   String
  senha      String

  favoritos  Favorito[] 
  produtos   Produto[]

  carrinho   Carrinho?
  pedidos    Pedido[]
  cupons     Cupom[]
}

model Cupom {
  idCupom     Int        @id @default(autoincrement())
  codigo      String     
  tipo        String
  validade    DateTime
  descricao   String

  idCliente   Int
  cliente     Cliente    @relation(fields: [idCliente], references: [idCliente])
  carrinho    Carrinho? 
}

model Carrinho {
  idCarrinho     Int        @id @default(autoincrement())
  itens          Produto[]
  valorTotal     Float

  idCliente      Int        @unique
  cliente        Cliente    @relation(fields: [idCliente], references: [idCliente], onDelete: Cascade)

  idCupom        Int?       @unique
  cupom          Cupom?     @relation(fields: [idCupom], references: [idCupom], onDelete: SetNull)
}

model Pedido {
  idPedido    Int       @id @default(autoincrement())
  data        DateTime  @default(now())
  valorTotal  Float
  endereco    String
  cep         String
  numero      String
  bairro      String
  cidade      String
  pagamento   String

  idCliente   Int
  cliente     Cliente   @relation(fields: [idCliente], references: [idCliente], onDelete: Cascade)

  produtos    Produto[]
}

model Favorito {
  idFavorito  Int       @id @default(autoincrement())
  data        DateTime  @default(now())
  
  idCliente   Int
  cliente     Cliente   @relation(fields: [idCliente], references: [idCliente], onDelete: Cascade)

  idProduto   Int
  produto     Produto   @relation(fields: [idProduto], references: [idProduto], onDelete: Cascade)
}

model Produto {
  idProduto    Int         @id @default(autoincrement())
  nome         String
  descricao    String?
  preco        Float
  cor          String?
  favoritados  Favorito[]
  
  idPedido     Int?        
  pedido       Pedido?     @relation(fields: [idPedido], references: [idPedido])

  idCarrinho   Int?        
  carrinho     Carrinho?   @relation(fields: [idCarrinho], references: [idCarrinho])

  idCliente    Int         
  cliente      Cliente     @relation(fields: [idCliente], references: [idCliente])

}
